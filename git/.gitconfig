[core]
	editor = nvim
	autocrlf = input
	ignorecase = false
[user]
	name = JoÃ£o Vitor Sousa
	email = joaovfsousa@gmail.com
[diff]
	guitool = code
	tool = vimdiff
[alias]
  a = add
  aa = add *
  al = 'config --get-regexp ^alias\\.'
  b = branch
  brs = branch --format='%(HEAD) %(color:yellow)%(refname:short)%(color:reset) - %(contents:subject) %(color:green)(%(committerdate:relative)) [%(authorname)]' --sort=-committerdate
  c = commit
  cb = checkout -b
  cim = "!f() { git commit -m \"$*\"; }; f"
  cl = clone
  clb = "!sh $HOME/.scripts/clone-bare"
  clone-bare = "!sh $HOME/.scripts/clone-bare"
  cm = !git checkout $(git mb)
  co = checkout
  cp = cherry-pick
  ct = reset --hard HEAD
  del = branch -D
  ignore = "!gi() { curl -sL https://www.toptal.com/developers/gitignore/api/$@ > .gitignoretempfile; sed -e '1,3d;$d' < .gitignoretempfile > .gitignore; rm .gitignoretempfile;}; gi"
  incoming = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' ..@{u})
  last = log -1 HEAD --stat 
  lg = log --pretty=format:'%Cred%h%Creset %C(bold)%cr%Creset %Cgreen<%an>%Creset %s' --max-count=30
  lgg = log --graph --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%an%C(reset)%C(bold yellow)%d%C(reset) %C(dim white)- %s%C(reset)' --all
  m = merge
  mb = !git symbolic-ref refs/remotes/origin/HEAD | cut -d'/' -f4
  md = merge --no-commit --no-ff
  outgoing = !(git fetch --quiet && git log --pretty=format:'%C(yellow)%h %C(white)- %C(red)%an %C(white)- %C(cyan)%d%Creset %s %C(white)- %ar%Creset' @{u}..)
  pl = pull -f
  pom = !git push origin $(git mb) -u
  ps = push
  psf = push --force-with-lease
  rb = rebase
  rba = rebase --abort
  rbc = rebase --continue
  rbi = "!r() { git rebase -i HEAD~$* ; }; r"
  s = switch
  save = !git add -A && git commit -m 'chore: savepoint'
  sb = switch -
  sc = switch -c
  sf = show --name-only
  sm = !git switch $(git mb)
  st = status -sb
  uncommit = reset --soft HEAD^
  undo = checkout --
  unstage = reset HEAD --
  wt = worktree
[init]
	defaultBranch = main
[credential]
	helper = store
[pull]
  rebase = true
[include]
  path = ~/.workgitconfig
[push]
	autoSetupRemote = true
[url "ssh://git@github.com/"]
	insteadOf = https://github.com/
