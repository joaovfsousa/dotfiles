len(){
  place=cwd
  ls ${1:$place} | wc -l
}

da() { docker exec -it $1 /bin/bash }

dl() { docker logs -n 100 --follow $1 }

rnet() {sudo ifconfig en0 down; sudo ifconfig en0 up;}

td () {
  local location=~/Documents/Obsidian/Notes/todo.md
  if [[ "$1" == "e" ]]; then
    v "$location"
  else
    glow "$location"
  fi
}

function run {
  if [ -f package.json ]; then
    if ! jq -e '.scripts' package.json >/dev/null; then
      echo "No scripts found in package.json"
      return
    fi

    local script=$(jq -r '.scripts' package.json | sed '1d;$d' | fzf --height 40% --reverse --query="$1")

    local script_name=$(echo $script | awk -F'"' '{print $2}')
    local script_value=$(echo $script | awk -F'"' '{print $4}')

    if [ -n "$script" ]; then
      echo "Running: $script_name"
      echo "Script: $script_value"
      if [ -f yarn.lock ]; then
        yarn run "$script_name"
      else
        npm run "$script_name"
      fi
    fi
  elif [[ -f Cargo.toml ]]; then
    cargo run
  else
    echo "No package.json or Cargo.toml found"
  fi
}

function brew {
  /opt/homebrew/bin/brew $@

  if ([ $1 = "install" ] || [ $1 = "uninstall" ]) && [ $2 != "-h" ]; then
    local current_dir=$(pwd)

    cd /Users/joaovfsousa/Projects/dotfiles
    brew bundle dump --force

    git add Brewfile
    git ci -m "Update Brewfile" -q
    git push -q

    echo "Brewfile updated and pushed to dotfiles repo"

    cd $current_dir
  fi
}

function jump_to_worktree {
  if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    current=$(pwd | xargs basename)
    list_of_worktrees=$(git worktree list | sed -E '/bare|\.repo/d')

    local worktree_path=$(echo $list_of_worktrees | fzf --height 40% --reverse | awk '{print $1}')

    cd "$worktree_path"
  else
    echo "Not inside a worktree repo."
  fi
}

function last_commit {
  if git rev-parse --is-inside-work-tree >/dev/null 2>&1; then
    hash=$(g log -1 --oneline | awk '{print $1}')
    echo $hash | pbcopy && echo "Commit $hash copied to clipboard"
  else
    echo "Not a git repository"
    return 1
  fi
}
